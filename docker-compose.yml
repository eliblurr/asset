version: "3.9"
# docker-compose --env-file ./docker.env up -d --build
# docker-compose --env-file ./docker.env down

services:
  app:
    build:
      context: ./app
      dockerfile: dockerfile
    image: master-image
    restart: always
    container_name: ${INSTANCE_NAME:-main}-asset-app
    expose: 
      - 80
    networks:
      - asset-network
    volumes:
      - upload_data:/home/app/web/uploads
      - static_data:/home/app/web/static
    env_file:
      - docker.env
    depends_on:
      - postgres
      - redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DOCKER: 'true'
      DATABASE_URL: 'postgres://${DB_USER}:${DB_PASSWORD}@postgres/${DB_NAME}'

  pgadmin:
    build:
      context: ./pgadmin
      dockerfile: dockerfile
    container_name: ${INSTANCE_NAME:-main}-asset-pgadmin
    restart: always
    expose:
      - 80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks: 
      - asset-network
    depends_on: 
      - postgres

  postgres:
    image: postgis/postgis:12-master
    container_name: ${INSTANCE_NAME:-main}-asset-postgres
    restart: always
    networks: 
      - asset-network
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment: 
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: postgres

  redis:
    restart: always
    image: redis:latest
    container_name: ${INSTANCE_NAME:-main}-asset-redis-server
    command: redis-server --save 60 1 --loglevel warning
    privileged: true
    expose:
      - 6379
    networks: 
      - asset-network
    volumes:
      - redis_data:/data
    env_file:
      - docker.env
    environment:
      - ALLOW_EMPTY_PASSWORD=yes      

  worker:
    image: master-image
    container_name: ${INSTANCE_NAME:-main}-asset-redis-worker
    depends_on:
      - redis
      - app
    command: python3 -m rds.worker # rq worker --name worker --url redis://redis:6379/0 
    networks: 
      - asset-network
    env_file:
      - docker.env
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DOCKER: 'true'
      DATABASE_URL: 'postgres://${DB_USER}:${DB_PASSWORD}@postgres/${DB_NAME}'
    volumes_from: 
      - app:rw
    restart: always

  nginx:
    build:
      context: ./nginx
      dockerfile: dockerfile
    restart: always
    container_name: ${INSTANCE_NAME:-main}-asset-nginx
    ports:
      - ${WEB_PORT}:2000
      - ${REDIS_PORT}:2001
      - ${PGADMIN_PORT}:2002
      - ${POSTGRES_PORT}:2003
    networks: 
      - asset-network
    depends_on:
      - app
    volumes_from: 
      - app:rw

volumes:
  static_data:
  upload_data:
  pgadmin_data:
  postgres_data:
  redis_data:
    driver: local

networks:
  asset-network:
    driver: bridge